From 3330880712fea43d14c05a83fe5615fe8fe7bde1 Mon Sep 17 00:00:00 2001
From: Cyprian Lech <clech@plume.com>
Date: Fri, 23 Oct 2020 12:11:34 +0000
Subject: [PATCH 4/7] Remove target_bsal_client_measure from core

RSSI events are not needed as while any kick is queued then if RSSI will
change in time of kick, another XING event should be achieved that will
reset any other kicks.
---
 src/bm/src/bm_kick.c             | 39 +++++++++-----------------------
 src/lib/target/inc/target_bsal.h | 20 ----------------
 src/lib/target/src/target_stub.c | 11 ---------
 3 files changed, 11 insertions(+), 59 deletions(-)

diff --git a/src/bm/src/bm_kick.c b/src/bm/src/bm_kick.c
index 95ac971..ce85799 100644
--- a/src/bm/src/bm_kick.c
+++ b/src/bm/src/bm_kick.c
@@ -61,7 +61,6 @@ typedef struct {
 
     bm_kick_type_t      type;
     uint8_t             rssi;
-    bool                measuring;
 
     ds_list_t           dsl_node;
 } bm_kick_t;
@@ -384,6 +383,7 @@ bm_kick_task_queue_run(void *arg)
     bm_kick_t           *kick;
     bool                remove = false;
     int                 ret;
+    bsal_client_info_t  info;
 
     (void)arg;
 
@@ -408,24 +408,21 @@ bm_kick_task_queue_run(void *arg)
             break;
         }
 
-        LOGD("Starting measurement for '%s'", client->mac_addr);
+        LOGD("Starting SNR measurement for '%s'", client->mac_addr);
 
         // Kick off an instant measurement for this entry
-        ret = target_bsal_client_measure(kick->ifname,
-                                    (uint8_t *)&kick->macaddr, INST_RSSI_SAMPLE_CNT);
-        if (ret == -ENOSYS) {
-            // BSAL library doesn't support instant measurement, just use last RSSI
-            evsched_task(bm_kick_task_kick, kick, EVSCHED_ASAP);
-            break;
-        }
-        else if (ret < 0) {
-            LOGE("%s: Failed to perform instant measrement for '%s', ret = %d",
+        ret = target_bsal_client_info(kick->ifname, (uint8_t *)&kick->macaddr, &info);
+        if (ret < 0) {
+            LOGE("%s: Failed to get client info '%s', ret = %d",
                   kick->ifname, client->mac_addr, ret);
             remove = true;
             break;
         }
 
-        kick->measuring = true;
+        kick->rssi = info.snr;
+        LOGD("Update SNR for '%s' to %u", client->mac_addr, info.snr);
+        evsched_task(bm_kick_task_kick, kick, EVSCHED_ASAP);
+
     } while(0);
 
     if (remove) {
@@ -879,14 +876,10 @@ bm_kick_cleanup_by_group(bm_group_t *group)
 {
     ds_list_iter_t      iter;
     bm_kick_t           *kick;
-    bool                check_restart = false;
 
     kick = ds_list_ifirst(&iter, &bm_kick_queue);
     while(kick) {
         if (kick->group == group) {
-            if (kick->measuring) {
-                check_restart = true;
-            }
             ds_list_iremove(&iter);
             bm_kick_free(kick);
         }
@@ -894,13 +887,6 @@ bm_kick_cleanup_by_group(bm_group_t *group)
         kick = ds_list_inext(&iter);
     }
 
-    if (check_restart) {
-        if (ds_list_head(&bm_kick_queue)) {
-            LOGW("Measuring entry removed -- restarting queue");
-            bm_kick_queue_start();
-        }
-    }
-
     return true;
 }
 
@@ -912,8 +898,7 @@ bm_kick_cleanup_by_client(bm_client_t *client)
 
     kick = ds_list_ifirst(&iter, &bm_kick_queue);
     while(kick) {
-        if (memcmp(&client->macaddr, &kick->macaddr, sizeof(client->macaddr)) == 0 &&
-            kick->measuring == false) {
+        if (memcmp(&client->macaddr, &kick->macaddr, sizeof(client->macaddr)) == 0) {
             ds_list_iremove(&iter);
             bm_kick_free(kick);
         }
@@ -1163,12 +1148,10 @@ bm_kick_measurement(os_macaddr_t macaddr, uint8_t rssi)
         return;
     }
 
-    if (!kick->measuring ||
-                memcmp(&macaddr, &kick->macaddr, sizeof(macaddr)) != 0) {
+    if (memcmp(&macaddr, &kick->macaddr, sizeof(macaddr)) != 0) {
         return;
     }
 
-    kick->measuring = false;
     kick->rssi = rssi;
     evsched_task(bm_kick_task_kick, kick, EVSCHED_ASAP);
     return;
diff --git a/src/lib/target/inc/target_bsal.h b/src/lib/target/inc/target_bsal.h
index 7d58d41..da7daa0 100644
--- a/src/lib/target/inc/target_bsal.h
+++ b/src/lib/target/inc/target_bsal.h
@@ -432,26 +432,6 @@ int target_bsal_client_update(const char *ifname,
 int target_bsal_client_remove(const char *ifname,
                               const uint8_t *mac_addr);
 
-/**
- * @brief Requests target to schedule signal strength measurement
- *
- * The target is expected to generate BSAL_EVENT_RSSI
- * asynchronously after this function returns.
- *
- * @note target_bsal_client_add() will be called sometime earlier first
- * @param ifname Wireless interface name the client is connected on
- * @param mac_addr 6-byte MAC address of the client
- * @param num_samples Number of samples to average from.
- *      Single RSSI samples tend to vary a lot so it's often
- *      desired to collect more than one and smooth it. The
- *      target is left with the decision about the
- *      algorithm.
- * @return 0 is treated as success, anything else is an error
- */
-int target_bsal_client_measure(const char *ifname,
-                               const uint8_t *mac_addr,
-                               int num_samples);
-
 /**
  * @brief Requests target to disconnect a client
  * @note target_bsal_client_add() will be called sometime earlier first
diff --git a/src/lib/target/src/target_stub.c b/src/lib/target/src/target_stub.c
index 34a0dca..152a7df 100644
--- a/src/lib/target/src/target_stub.c
+++ b/src/lib/target/src/target_stub.c
@@ -584,17 +584,6 @@ int target_bsal_client_remove(const char *ifname, const uint8_t *mac_addr)
 }
 #endif
 
-#ifndef IMPL_target_bsal_client_measure
-int target_bsal_client_measure(const char *ifname, const uint8_t *mac_addr,
-                               int num_samples)
-{
-    (void)ifname;
-    (void)mac_addr;
-    (void)num_samples;
-    return -1;
-}
-#endif
-
 #ifndef IMPL_target_bsal_client_disconnect
 int target_bsal_client_disconnect(const char *ifname, const uint8_t *mac_addr,
                                   bsal_disc_type_t type, uint8_t reason)
-- 
2.25.1

